import express from 'express';
import bodyParser from 'body-parser';
import nodemailer from 'nodemailer';
import dotenv from 'dotenv';
import cors from 'cors';
import axios from 'axios';

dotenv.config();

const PORT = process.env.NODE_SERVER_PORT || 8031;
const app = express();

app.use(bodyParser.json());
app.use(cors());

const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: process.env.SMTP_PORT,
  secure: false,
  auth: {
    user: process.env.SMTP_USERNAME,
    pass: process.env.SMTP_PASSWORD,
  },
});

const sendTelegramNotification = async (data) => {
  const { name, phone, email, comment } = data;

  const message = `üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞*\n\n` +
    `üë§ *–ò–º—è:* ${name}\n` +
    `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}\n` +
    `üìß *Email:* ${email}\n` +
    `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${comment || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n` +
    `‚è∞ *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU')}`;

  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  const chatId = process.env.TELEGRAM_CHAT_ID;

  try {
    const response = await axios.post(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      chat_id: chatId,
      text: message,
      parse_mode: 'Markdown'
    });
    console.log('Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', response.data);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error.response?.data || error.message);
    throw error;
  }
};

app.post('/api/node/send-email', async (req, res) => {
  const { name, phone, email, comment } = req.body;

  const mailOptions = {
    from: process.env.SMTP_USERNAME,
    to: ['SALES@DZEN-PAY.COM', 'product@dzen-pay.com'],
    subject: '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Ñ–æ—Ä–º—ã',
    text: `
      –ò–º—è: ${name}
      –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
      Email: ${email}
      –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}
    `,
  };

  const results = {
    email: { success: false, error: null },
    telegram: { success: false, error: null }
  };

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
  if (process.env.SMTP_HOST && process.env.SMTP_USERNAME && process.env.SMTP_PASSWORD) {
    try {
      await new Promise((resolve, reject) => {
        transporter.sendMail(mailOptions, (error, info) => {
          if (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', error);
            reject(error);
          } else {
            console.log('–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', info.response);
            resolve(info);
          }
        });
      });
      results.email = { success: true, error: null };
    } catch (emailError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email:', emailError);
      results.email = { success: false, error: emailError.message };
    }
  } else {
    console.log('SMTP –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É email');
  }

  if (process.env.TELEGRAM_BOT_TOKEN && process.env.TELEGRAM_CHAT_ID) {
    try {
      await sendTelegramNotification({ name, phone, email, comment });
      results.telegram = { success: true, error: null };
    } catch (telegramError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', telegramError);
      results.telegram = { success: false, error: telegramError.message };
    }
  } else {
    console.log('Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
  }

  const hasSuccess = results.email.success || results.telegram.success;

  if (hasSuccess) {
    res.status(200).json({
      success: true,
      message: '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
      results: results
    });

    return;
  }

  res.status(500).json({
    success: false,
    error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∏ –æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º',
    results: results
  });
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
  console.log(`Telegram Bot Token: ${process.env.TELEGRAM_BOT_TOKEN ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}`);
  console.log(`Telegram Chat ID: ${process.env.TELEGRAM_CHAT_ID ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω'}`);
});